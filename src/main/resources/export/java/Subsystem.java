#header()

package ${package}.subsystems;
#set($subsystem = $helper.getByName($subsystem_name, $robot))
#macro( klass $cmd )#if( "#type($cmd)" == "" ) SubsystemBase #else#type($cmd)#end#end


import ${package}.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
#@autogenerated_code("imports", "")
#parse("${exporter_path}Subsystem-imports.java")
#end


/**
 *
 */
public class #class($subsystem.name) extends #klass($subsystem) {
    #@autogenerated_code("declarations", "    ")
    
                #parse("${exporter_path}Subsystem-declarations.java")
    #end
    
    /**
    * Creates a new ExampleSubsystem.
    */
    public #class($subsystem.name)() {
#@autogenerated_code("constructors", "        ")
#parse("${exporter_path}Subsystem-constructors.java")
#end
    }

    public void log() {
        /**
         * SmartDashboard.putData("key", object);
         */
        
    }


    /**
    * Will be called periodically whenever the CommandScheduler runs.
    */
    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

#@autogenerated_code("pidgetters", "        ")
#parse("${exporter_path}Subsystem-pidgetters.java")
#end

    public void setThisPID(double setpoint){
        
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

