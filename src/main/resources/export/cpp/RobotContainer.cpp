#header()

\#include "RobotContainer.h"
\#include <frc2/command/ParallelRaceGroup.h>
\#include <frc/smartdashboard/SmartDashboard.h>

#set($cmd = $robot.getProperty("Autonomous Command").getValue())

#foreach ($component in $components)
#if ($helper.exportsTo("OI", $component)
     && "#type($component)" != "" 
     && "#type($component)" == "Joystick")
    #set($joy = $component)
#end
#end

RobotContainer::RobotContainer() : m_autonomousCommand(
#@autogenerated_code("constructor", "    ")
#parse("${exporter_path}RobotContainer-constructors.cpp")
#end

    ConfigureButtonBindings();

#@autogenerated_code("default-commands", "    ")
#parse("${exporter_path}RobotContainer-subsystem-default_command.cpp")
#end

#@autogenerated_code("autonomous", "    ")
#parse("${exporter_path}RobotContainer-autonomous.cpp")
#end

    frc::SmartDashboard::PutData("Auto Mode", &m_chooser);

}

void RobotContainer::ConfigureButtonBindings() {
#@autogenerated_code("buttons", "    ")
#parse("${exporter_path}RobotContainer-buttons.cpp")
#end
}

#@autogenerated_code("functions", "")
#parse("${exporter_path}RobotContainer-functions.cpp")
#end


frc2::Command* RobotContainer::GetAutonomousCommand() {
  // The selected command will be run in autonomous
  return m_chooser.GetSelected();
}