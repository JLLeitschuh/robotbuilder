#set($command = $robot.getProperty("Autonomous Command").getValue())

#header()

#pragma once

\#include "frc/Joystick.h"
\#include "frc2/command/Command.h"

\#include "Commands/#class($command).h"

#foreach( $component in $components )
#if ($component.getBase().getType() == "Command"
     && $component.getProperty("Button on SmartDashboard").getValue())
        #if( $component.getProperty("Parameter presets").getValue().isEmpty() )
                #if ($component.getProperty("Requires").getValue() != "None")
\#include "Subsystems/#class(${component.getProperty("Requires").getValue()}).h"
               #end
        #end
#end
#end

#@autogenerated_code("prototypes", "	")
#parse("${exporter_path}OI-includes.h")
#end

class RobotContainer {

public:
	RobotContainer();
	frc2::Command* GetAutonomousCommand();

#@autogenerated_code("prototypes", "	")
#parse("${exporter_path}OI-prototypes.h")
#end

private:

#*
#foreach( $component in $components )
#if ($component.getBase().getType() == "SubsystemBase")
#class(${component.name}) m_#variable($component.name);
#end
#end
*#
#if($component.getBase().getType() == "Command" && !($component.getProperty("Parameters").getValue().isEmpty()))
double m_setpoint;
#end

#@autogenerated_code("declarations", "	")
#parse("${exporter_path}OI-declarations.h")
#end

#class($command) m_autonomousCommand;

void ConfigureButtonBindings();
};