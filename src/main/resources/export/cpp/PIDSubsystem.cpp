#header()

#set($subsystem = $helper.getByName($subsystem_name, $robot))

\#include "subsystems/#class($subsystem.name).h"
\#include "frc/smartdashboard/SmartDashboard.h"
\#include <frc/controller/PIDController.h>
\#include "frc/livewindow/LiveWindow.h"
#@autogenerated_code("includes", "")
#parse("${exporter_path}Subsystem-includes.cpp")
#end
#set($subsystem = $helper.getByName($subsystem_name, $robot))

#@autogenerated_code("pid", "")
#parse("${exporter_path}PIDSubsystem-pid.cpp")
#end

#@autogenerated_code("declarations", "    ")
#parse("${exporter_path}Subsystem-declarations.cpp")
#end

    // Use these to get going:
    // SetSetpoint() -  Sets where the PID controller should move the system
    //                  to
    // Enable() - Enables the PID controller.
}


void #class($subsystem.name)::Periodic() {
    // Put code here to be run every loop
    PIDSubsystem::Periodic();

}

void #class($subsystem.name)::SimulationPeriodic() {
    // This method will be called once per scheduler run when in simulation

}

double #class($subsystem.name)::GetMeasurement() {
#@autogenerated_code("source", "    ")
#parse("${exporter_path}PIDSubsystem-source.cpp")
#end
}

void #class($subsystem.name)::UseOutput(double output, double setpoint) {
    output += setpoint*kF;
#@autogenerated_code("output", "    ")
#parse("${exporter_path}PIDSubsystem-output.cpp")
#end
}

#@autogenerated_code("cmdpidgetters","      ")
#parse("${exporter_path}Subsystem-pidgetters.cpp")
#end

